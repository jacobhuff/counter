{"version":3,"sources":["components/Buttons.js","App.js","reportWebVitals.js","index.js"],"names":["Buttons","increment","decrement","handleSubmit","clear","id","onClick","onSubmit","type","name","placeholder","value","App","state","count","e","console","log","setState","preventDefault","target","customNumber","className","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAgBeA,EAdC,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,UAAWC,EAA0B,EAA1BA,aAAcC,EAAY,EAAZA,MACrD,OACE,gCACE,wBAAQC,GAAG,WAAWC,QAASJ,EAA/B,eACA,wBAAQG,GAAG,WAAWC,QAASL,EAA/B,eACA,uBAAMM,SAAUJ,EAAhB,UACE,uBAAOE,GAAG,eAAeG,KAAK,SAASC,KAAK,eAAeC,YAAY,kBACvE,uBAAOL,GAAG,gBAAgBG,KAAK,SAASG,MAAM,cAEhD,wBAAQN,GAAG,QAAQC,QAASF,EAA5B,uBC6BSQ,E,4MApCbC,MAAQ,CACNC,MAAO,G,EAETb,UAAY,SAACc,GACXC,QAAQC,IAAI,QACZ,EAAKC,SAAS,CACZJ,MAAO,EAAKD,MAAMC,MAAQ,K,EAG9BZ,UAAY,SAACa,GACX,EAAKG,SAAS,CACZJ,MAAO,EAAKD,MAAMC,MAAQ,K,EAG9BV,MAAQ,SAACW,GACP,EAAKG,SAAS,CACZJ,MAAO,K,EAGXX,aAAe,SAACY,GACdA,EAAEI,iBACF,EAAKD,SAAS,CACZJ,MAAOC,EAAEK,OAAOC,aAAaV,QAE/BI,EAAEK,OAAOC,aAAaV,MAAQ,I,uDAG9B,OACE,sBAAKW,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,SAAuBC,KAAKV,MAAMC,QAClC,cAAC,EAAD,CAASb,UAAWsB,KAAKtB,UAAWC,UAAWqB,KAAKrB,UAAWC,aAAcoB,KAAKpB,aAAcC,MAAOmB,KAAKnB,e,GA/BlGoB,aCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.21edcd72.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Buttons = ({ increment, decrement, handleSubmit, clear }) => {\r\n  return (\r\n    <div>\r\n      <button id='decrease' onClick={decrement}>-</button>\r\n      <button id='increase' onClick={increment}>+</button>\r\n      <form onSubmit={handleSubmit}>\r\n        <input id=\"custom-input\" type='number' name=\"customNumber\" placeholder='Custom Amount' />\r\n        <input id='submit-button' type='submit' value='Submit' />\r\n      </form>\r\n      <button id='clear' onClick={clear}>Clear</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Buttons\r\n","import React, { Component } from 'react'\nimport Buttons from './components/Buttons'\n\nclass App extends Component {\n  state = {\n    count: 0\n  }\n  increment = (e) => {\n    console.log('here');\n    this.setState({\n      count: this.state.count + 1\n    })\n  }\n  decrement = (e) => {\n    this.setState({\n      count: this.state.count - 1\n    })\n  }\n  clear = (e) => {\n    this.setState({\n      count: 0\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.setState({\n      count: e.target.customNumber.value\n    })\n    e.target.customNumber.value = ''\n  }\n  render() {\n    return (\n      <div className='container'>\n        <h1 className='count'>{this.state.count}</h1>\n        <Buttons increment={this.increment} decrement={this.decrement} handleSubmit={this.handleSubmit} clear={this.clear} />\n      </div>\n    )\n  }\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}